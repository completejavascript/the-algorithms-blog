webpackJsonp([0x621153edb2ef],{794:function(n,l){n.exports={data:{post:{html:'<h2>Đề bài:</h2>\n<p>Giáo sư Hopper đang nghiên cứu về hành vi giới tính của một dạng hiếm có của loài bọ. Ông ta giả sử rằng chúng chia ra làm 2 giới tính khác nhau. Và chúng chỉ tương tác với những loài có giới tính khác. Theo nghiên cứu của ông, những con bọ riêng lẻ và hành vi của chúng rất dễ để nhận ra. Bởi vì những số được in trên lưng của chúng. </p>\n<p>Cho trước một danh sách sự tương tác giữa những con bọ. Hãy quyết định xem nếu như những nghiên cứu ủng hộ giả sử của ông ta rằng không có tình dục đồng giới hoặc có tồn tại điều đó.</p>\n<h3>Đầu vào:</h3>\n<p>Dòng đầu tiên chứa số lượng test case. Mỗi test case bắt đầu với một dòng gồm 2 số. Số thứ nhất là số con bọ (giá trị thuộc từ 1 đến 2000) và số tương tác (giá trị lên đến 1000000) được phân cách nhau bởi dấu cách. Các dòng tiếp theo, mỗi dòng mô tả một tương tác, gồm 2 số nguyên khác nhau, là chỉ số của con bọ. Các con bọ được đánh số liên tiếp và bắt đầu từ 1.</p>\n<h3>Đầu ra:</h3>\n<p>Với mỗi test case, sẽ là một dòng dạng "Scenario #i:" với i là chỉ số test case, bắt đầu từ 1. Theo sau bởi một dòng là "No suspicious bugs found!" nếu phù hợp với giả sử của giáo sư là không có tình dục đồng giới. Ngược lại thì là "Suspicious bugs found!".</p>\n<h3>Ví dụ:</h3>\n<p><strong>Đầu vào:</strong></p>\n<pre><code>2\n3 3\n1 2\n2 3\n1 3\n4 2\n1 2\n3 4\n</code></pre>\n<p><strong>Đầu ra:</strong></p>\n<pre><code>Scenario #1:\nSuspicious bugs found!\nScenario #2:\nNo suspicious bugs found!\n</code></pre>\n<h3>Giải thích:</h3>\n<ul>\n<li>\n<p>Với test case 1: có điều khả nghi được tìm thấy. Vì 1 tương tác với 2 nên chứng tỏ 1 và 2 khác giới nhau. Tiếp theo 2 tương tác với 3 chứng tỏ 2 và 3 khác giới nhau. Từ hai điều trên suy ra 1 và 3 phải cùng giới. Nhưng 1 và 3 lại có tương tác. Từ đó, suy ra có hiện tượng tình dục đồng giới.</p>\n</li>\n<li>\n<p>Với test case 2: rõ ràng thỏa mãn không có tình dục đồng giới. </p>\n</li>\n</ul>\n<p><em>Các bạn có thể tham khảo link gốc đề bài và submit code tại đây: <a href="http://www.spoj.com/problems/BUGLIFE/">http://www.spoj.com/problems/BUGLIFE/</a></em></p>\n<h3>Phân tích:</h3>\n<ul>\n<li>\n<p>Rõ ràng đây là bài toán chia đôi đồ thị. Tôi sẽ sử dụng <a href="/the-algorithms-blog/category/tim-kiem-theo-chieu-sau-dfs/">thuật toán tìm kiếm theo chiều sâu DFS</a> để duyệt các con bọ và đánh số các con bọ theo quy luật là 2 con bọ có tương tác với nhau sẽ được đánh dấu khác nhau (ví dụ 1 và 2).</p>\n</li>\n<li>\n<p>Do đó, những con bọ được đánh dấu cùng loại sẽ có cùng giới tính. Như vậy, nếu 2 con bọ nào được đánh dấu cùng loại mà lại có tương tác thì suy ra kết quả là tồn tại tình dục đồng giới. Ngược lại sẽ là không.</p>\n</li>\n</ul>\n<h2>Lời giải:</h2>\n<p>(Các bạn nên tự mình nghĩ ra thuật toán của bài toán trước khi tham khảo code của tôi nhé. Hãy phát huy tối đa khả năng sáng tạo của bản thân. Hơn nữa code tôi viết ra cũng chưa thật sự tối ưu. Nên rất mong nhận được sự chia sẻ của các bạn.)</p>\n<h3>Code C/C++:</h3>\n<p><div id="gist91920003" class="gist">\n    <div class="gist-file">\n      <div class="gist-data">\n        <div class="js-gist-file-update-container js-task-list-container file-box">\n  <div id="file-buglife-cpp" class="file">\n    \n\n  <div itemprop="text" class="blob-wrapper data type-c ">\n      \n<table class="highlight tab-size js-file-line-container" data-tab-size="8">\n      <tr>\n        <td id="file-buglife-cpp-L1" class="blob-num js-line-number" data-line-number="1"></td>\n        <td id="file-buglife-cpp-LC1" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>iostream<span class="pl-pds">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L2" class="blob-num js-line-number" data-line-number="2"></td>\n        <td id="file-buglife-cpp-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-k">using</span> <span class="pl-k">namespace</span> <span class="pl-en">std</span><span class="pl-k">;</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L3" class="blob-num js-line-number" data-line-number="3"></td>\n        <td id="file-buglife-cpp-LC3" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L4" class="blob-num js-line-number" data-line-number="4"></td>\n        <td id="file-buglife-cpp-LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">int</span> MAX = <span class="pl-c1">2005</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L5" class="blob-num js-line-number" data-line-number="5"></td>\n        <td id="file-buglife-cpp-LC5" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L6" class="blob-num js-line-number" data-line-number="6"></td>\n        <td id="file-buglife-cpp-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> N;\t\t<span class="pl-c"><span class="pl-c">//</span> số lượng bọ</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L7" class="blob-num js-line-number" data-line-number="7"></td>\n        <td id="file-buglife-cpp-LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> I;\t\t<span class="pl-c"><span class="pl-c">//</span> số lượng tương tác</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L8" class="blob-num js-line-number" data-line-number="8"></td>\n        <td id="file-buglife-cpp-LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> Answer;\t<span class="pl-c"><span class="pl-c">//</span> kết quả 1 : nếu tồn tại tình dục đồng giới</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L9" class="blob-num js-line-number" data-line-number="9"></td>\n        <td id="file-buglife-cpp-LC9" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L10" class="blob-num js-line-number" data-line-number="10"></td>\n        <td id="file-buglife-cpp-LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> Matrix[MAX][MAX];\t<span class="pl-c"><span class="pl-c">//</span> Đánh dấu tồn tại cạnh giữa 2 điểm</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L11" class="blob-num js-line-number" data-line-number="11"></td>\n        <td id="file-buglife-cpp-LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> Mark[MAX];\t\t\t<span class="pl-c"><span class="pl-c">//</span> Mảng đánh dấu loại các con bọ</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L12" class="blob-num js-line-number" data-line-number="12"></td>\n        <td id="file-buglife-cpp-LC12" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L13" class="blob-num js-line-number" data-line-number="13"></td>\n        <td id="file-buglife-cpp-LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span>*</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L14" class="blob-num js-line-number" data-line-number="14"></td>\n        <td id="file-buglife-cpp-LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* u : điểm đang xét</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L15" class="blob-num js-line-number" data-line-number="15"></td>\n        <td id="file-buglife-cpp-LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* before: điểm trước đó</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L16" class="blob-num js-line-number" data-line-number="16"></td>\n        <td id="file-buglife-cpp-LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c">* type: loại của điểm đang xét</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L17" class="blob-num js-line-number" data-line-number="17"></td>\n        <td id="file-buglife-cpp-LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L18" class="blob-num js-line-number" data-line-number="18"></td>\n        <td id="file-buglife-cpp-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">DFS</span>(<span class="pl-k">int</span> u, <span class="pl-k">int</span> before, <span class="pl-k">int</span> type)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L19" class="blob-num js-line-number" data-line-number="19"></td>\n        <td id="file-buglife-cpp-LC19" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L20" class="blob-num js-line-number" data-line-number="20"></td>\n        <td id="file-buglife-cpp-LC20" class="blob-code blob-code-inner js-file-line">\tMark[u] = type;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L21" class="blob-num js-line-number" data-line-number="21"></td>\n        <td id="file-buglife-cpp-LC21" class="blob-code blob-code-inner js-file-line">\t<span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= Matrix[u][<span class="pl-c1">0</span>] &amp;&amp; !Answer; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L22" class="blob-num js-line-number" data-line-number="22"></td>\n        <td id="file-buglife-cpp-LC22" class="blob-code blob-code-inner js-file-line">\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L23" class="blob-num js-line-number" data-line-number="23"></td>\n        <td id="file-buglife-cpp-LC23" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">int</span> v = Matrix[u][i];</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L24" class="blob-num js-line-number" data-line-number="24"></td>\n        <td id="file-buglife-cpp-LC24" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">if</span>(Mark[v] == -<span class="pl-c1">1</span>)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L25" class="blob-num js-line-number" data-line-number="25"></td>\n        <td id="file-buglife-cpp-LC25" class="blob-code blob-code-inner js-file-line">\t\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L26" class="blob-num js-line-number" data-line-number="26"></td>\n        <td id="file-buglife-cpp-LC26" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-c"><span class="pl-c">//</span> Nếu chưa duyệt thì duyệt và đánh dấu loại khác với điểm trước đó</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L27" class="blob-num js-line-number" data-line-number="27"></td>\n        <td id="file-buglife-cpp-LC27" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-c1">DFS</span>(v, u, !type);</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L28" class="blob-num js-line-number" data-line-number="28"></td>\n        <td id="file-buglife-cpp-LC28" class="blob-code blob-code-inner js-file-line">\t\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L29" class="blob-num js-line-number" data-line-number="29"></td>\n        <td id="file-buglife-cpp-LC29" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">else</span> <span class="pl-k">if</span>(v != before &amp;&amp; Mark[v] == type)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L30" class="blob-num js-line-number" data-line-number="30"></td>\n        <td id="file-buglife-cpp-LC30" class="blob-code blob-code-inner js-file-line">\t\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L31" class="blob-num js-line-number" data-line-number="31"></td>\n        <td id="file-buglife-cpp-LC31" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-c"><span class="pl-c">//</span> Nếu gặp một điểm mà được xét rồi và cùng loại thì có tình dục đồng giới</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L32" class="blob-num js-line-number" data-line-number="32"></td>\n        <td id="file-buglife-cpp-LC32" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-c"><span class="pl-c">//</span> Lúc này dừng lại luôn.</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L33" class="blob-num js-line-number" data-line-number="33"></td>\n        <td id="file-buglife-cpp-LC33" class="blob-code blob-code-inner js-file-line">\t\t\tAnswer = <span class="pl-c1">1</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L34" class="blob-num js-line-number" data-line-number="34"></td>\n        <td id="file-buglife-cpp-LC34" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-k">return</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L35" class="blob-num js-line-number" data-line-number="35"></td>\n        <td id="file-buglife-cpp-LC35" class="blob-code blob-code-inner js-file-line">\t\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L36" class="blob-num js-line-number" data-line-number="36"></td>\n        <td id="file-buglife-cpp-LC36" class="blob-code blob-code-inner js-file-line">\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L37" class="blob-num js-line-number" data-line-number="37"></td>\n        <td id="file-buglife-cpp-LC37" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L38" class="blob-num js-line-number" data-line-number="38"></td>\n        <td id="file-buglife-cpp-LC38" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L39" class="blob-num js-line-number" data-line-number="39"></td>\n        <td id="file-buglife-cpp-LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>()</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L40" class="blob-num js-line-number" data-line-number="40"></td>\n        <td id="file-buglife-cpp-LC40" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L41" class="blob-num js-line-number" data-line-number="41"></td>\n        <td id="file-buglife-cpp-LC41" class="blob-code blob-code-inner js-file-line">\t<span class="pl-c1">ios::sync_with_stdio</span>(<span class="pl-c1">false</span>);</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L42" class="blob-num js-line-number" data-line-number="42"></td>\n        <td id="file-buglife-cpp-LC42" class="blob-code blob-code-inner js-file-line">\t<span class="pl-c"><span class="pl-c">//</span>freopen(&quot;input.txt&quot;,&quot;r&quot;,stdin);</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L43" class="blob-num js-line-number" data-line-number="43"></td>\n        <td id="file-buglife-cpp-LC43" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L44" class="blob-num js-line-number" data-line-number="44"></td>\n        <td id="file-buglife-cpp-LC44" class="blob-code blob-code-inner js-file-line">\t<span class="pl-k">int</span> T;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L45" class="blob-num js-line-number" data-line-number="45"></td>\n        <td id="file-buglife-cpp-LC45" class="blob-code blob-code-inner js-file-line">\tcin &gt;&gt; T;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L46" class="blob-num js-line-number" data-line-number="46"></td>\n        <td id="file-buglife-cpp-LC46" class="blob-code blob-code-inner js-file-line">\t<span class="pl-k">for</span> (<span class="pl-k">int</span> tc = <span class="pl-c1">0</span>; tc &lt; T; tc++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L47" class="blob-num js-line-number" data-line-number="47"></td>\n        <td id="file-buglife-cpp-LC47" class="blob-code blob-code-inner js-file-line">\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L48" class="blob-num js-line-number" data-line-number="48"></td>\n        <td id="file-buglife-cpp-LC48" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-c"><span class="pl-c">//</span> Nhập đầu vào</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L49" class="blob-num js-line-number" data-line-number="49"></td>\n        <td id="file-buglife-cpp-LC49" class="blob-code blob-code-inner js-file-line">\t\tAnswer = <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L50" class="blob-num js-line-number" data-line-number="50"></td>\n        <td id="file-buglife-cpp-LC50" class="blob-code blob-code-inner js-file-line">\t\tcin &gt;&gt; N &gt;&gt; I;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L51" class="blob-num js-line-number" data-line-number="51"></td>\n        <td id="file-buglife-cpp-LC51" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt;= N; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L52" class="blob-num js-line-number" data-line-number="52"></td>\n        <td id="file-buglife-cpp-LC52" class="blob-code blob-code-inner js-file-line">\t\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L53" class="blob-num js-line-number" data-line-number="53"></td>\n        <td id="file-buglife-cpp-LC53" class="blob-code blob-code-inner js-file-line">\t\t\tMark[i] = -<span class="pl-c1">1</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L54" class="blob-num js-line-number" data-line-number="54"></td>\n        <td id="file-buglife-cpp-LC54" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-k">for</span>(<span class="pl-k">int</span> j = <span class="pl-c1">0</span>; j &lt;= N; j++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L55" class="blob-num js-line-number" data-line-number="55"></td>\n        <td id="file-buglife-cpp-LC55" class="blob-code blob-code-inner js-file-line">\t\t\t\tMatrix[i][j] = <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L56" class="blob-num js-line-number" data-line-number="56"></td>\n        <td id="file-buglife-cpp-LC56" class="blob-code blob-code-inner js-file-line">\t\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L57" class="blob-num js-line-number" data-line-number="57"></td>\n        <td id="file-buglife-cpp-LC57" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L58" class="blob-num js-line-number" data-line-number="58"></td>\n        <td id="file-buglife-cpp-LC58" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">int</span> a, b, m;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L59" class="blob-num js-line-number" data-line-number="59"></td>\n        <td id="file-buglife-cpp-LC59" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= I; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L60" class="blob-num js-line-number" data-line-number="60"></td>\n        <td id="file-buglife-cpp-LC60" class="blob-code blob-code-inner js-file-line">\t\t{</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L61" class="blob-num js-line-number" data-line-number="61"></td>\n        <td id="file-buglife-cpp-LC61" class="blob-code blob-code-inner js-file-line">\t\t\tcin &gt;&gt; a &gt;&gt; b;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L62" class="blob-num js-line-number" data-line-number="62"></td>\n        <td id="file-buglife-cpp-LC62" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L63" class="blob-num js-line-number" data-line-number="63"></td>\n        <td id="file-buglife-cpp-LC63" class="blob-code blob-code-inner js-file-line">\t\t\tm = ++Matrix[a][<span class="pl-c1">0</span>];</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L64" class="blob-num js-line-number" data-line-number="64"></td>\n        <td id="file-buglife-cpp-LC64" class="blob-code blob-code-inner js-file-line">\t\t\tMatrix[a][m] = b;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L65" class="blob-num js-line-number" data-line-number="65"></td>\n        <td id="file-buglife-cpp-LC65" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L66" class="blob-num js-line-number" data-line-number="66"></td>\n        <td id="file-buglife-cpp-LC66" class="blob-code blob-code-inner js-file-line">\t\t\tm = ++Matrix[b][<span class="pl-c1">0</span>];</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L67" class="blob-num js-line-number" data-line-number="67"></td>\n        <td id="file-buglife-cpp-LC67" class="blob-code blob-code-inner js-file-line">\t\t\tMatrix[b][m] = a;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L68" class="blob-num js-line-number" data-line-number="68"></td>\n        <td id="file-buglife-cpp-LC68" class="blob-code blob-code-inner js-file-line">\t\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L69" class="blob-num js-line-number" data-line-number="69"></td>\n        <td id="file-buglife-cpp-LC69" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L70" class="blob-num js-line-number" data-line-number="70"></td>\n        <td id="file-buglife-cpp-LC70" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-c"><span class="pl-c">//</span> Tìm những điểm chưa được duyệt thì sẽ duyệt</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L71" class="blob-num js-line-number" data-line-number="71"></td>\n        <td id="file-buglife-cpp-LC71" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= N; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L72" class="blob-num js-line-number" data-line-number="72"></td>\n        <td id="file-buglife-cpp-LC72" class="blob-code blob-code-inner js-file-line">\t\t\t<span class="pl-k">if</span>(Mark[i] == -<span class="pl-c1">1</span>)</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L73" class="blob-num js-line-number" data-line-number="73"></td>\n        <td id="file-buglife-cpp-LC73" class="blob-code blob-code-inner js-file-line">\t\t\t\t<span class="pl-c1">DFS</span>(i,-<span class="pl-c1">1</span>,<span class="pl-c1">0</span>);</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L74" class="blob-num js-line-number" data-line-number="74"></td>\n        <td id="file-buglife-cpp-LC74" class="blob-code blob-code-inner js-file-line">\n</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L75" class="blob-num js-line-number" data-line-number="75"></td>\n        <td id="file-buglife-cpp-LC75" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-c"><span class="pl-c">//</span> Đầu ra</span></td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L76" class="blob-num js-line-number" data-line-number="76"></td>\n        <td id="file-buglife-cpp-LC76" class="blob-code blob-code-inner js-file-line">\t\tcout &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Scenario #<span class="pl-pds">&quot;</span></span> &lt;&lt; tc + <span class="pl-c1">1</span>  &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>&lt;&lt; endl;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L77" class="blob-num js-line-number" data-line-number="77"></td>\n        <td id="file-buglife-cpp-LC77" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">if</span> (Answer) cout &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Suspicious bugs found!<span class="pl-pds">&quot;</span></span> &lt;&lt; endl;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L78" class="blob-num js-line-number" data-line-number="78"></td>\n        <td id="file-buglife-cpp-LC78" class="blob-code blob-code-inner js-file-line">\t\t<span class="pl-k">else</span> cout &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>No suspicious bugs found!<span class="pl-pds">&quot;</span></span> &lt;&lt; endl;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L79" class="blob-num js-line-number" data-line-number="79"></td>\n        <td id="file-buglife-cpp-LC79" class="blob-code blob-code-inner js-file-line">\t}</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L80" class="blob-num js-line-number" data-line-number="80"></td>\n        <td id="file-buglife-cpp-LC80" class="blob-code blob-code-inner js-file-line">\t<span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-buglife-cpp-L81" class="blob-num js-line-number" data-line-number="81"></td>\n        <td id="file-buglife-cpp-LC81" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class="gist-meta">\n        <a href="https://gist.github.com/completejavascript/d5e02f9c84108fee6e717a6296031fcf/raw/9fb08371ad9dde1c0aaf9581e694f3ee88da5cf7/BUGLIFE.cpp" style="float:right">view raw</a>\n        <a href="https://gist.github.com/completejavascript/d5e02f9c84108fee6e717a6296031fcf#file-buglife-cpp">BUGLIFE.cpp</a>\n        hosted with &#10084; by <a href="https://github.com">GitHub</a>\n      </div>\n    </div>\n</div>\n</p>\n<h3><em>Code by Phạm Văn Lâm.</em></h3>',id:"f:/Github/the-algorithms-blog/src/posts/2016-11-30---spoj-com-thuat-toan-bai-buglife-a-bugs-life/index.md absPath of file >>> MarkdownRemark",frontmatter:{title:"SPOJ.COM – Thuật toán bài BUGLIFE - A Bug’s Life",date:"30/11/2016",categories:["spoj","Tìm kiếm theo chiều sâu - DFS"],tags:["phạm văn lâm","spoj.com","thuật toán","thuật toán spoj.com","tìm kiếm theo chiều sâu dfs"]},fields:{slug:"/spoj-com-thuat-toan-bai-buglife-a-bugs-life/"},excerpt:"Đề bài: Giáo sư Hopper đang nghiên cứu về hành vi giới tính của một dạng hiếm có của loài bọ. Ông ta giả sử rằng chúng chia ra làm 2 giới…",timeToRead:6},prevPost:{frontmatter:{title:"SPOJ.COM – Thuật toán bài BYTESM2 - Philosophers Stone"},fields:{slug:"/spoj-com-thuat-toan-bai-bytesm2-philosophers-stone/"}},nextPost:{frontmatter:{title:"SPOJ.COM – Thuật toán bài BROKEN - Broken Keyboard"},fields:{slug:"/spoj-com-thuat-toan-bai-broken-broken-keyboard/"}},site:{siteMetadata:{title:"Algorithms Blog",siteUrl:"https://thuattoan.phamvanlam.com",twitterHandle:"@CmpltJavaScript",fbCommentId:"728566430818562",fbId:"100013577851883"}}},pathContext:{slug:"/spoj-com-thuat-toan-bai-buglife-a-bugs-life/",prevSlug:"/spoj-com-thuat-toan-bai-bytesm2-philosophers-stone/",nextSlug:"/spoj-com-thuat-toan-bai-broken-broken-keyboard/"}}}});
//# sourceMappingURL=path---spoj-com-thuat-toan-bai-buglife-a-bugs-life-a509afcb0a418ed37cc2.js.map