webpackJsonp([0xc48e19366ec4],{789:function(n,l){n.exports={data:{post:{html:'<h2><strong>Đề bài:</strong></h2>\n<p>Bạn được yêu cầu tìm thuật toán để giải quyết bài toán sudoku cơ bản.</p>\n<h3><strong>Đầu vào:</strong></h3>\n<p>Dòng đầu vào bao gồm số lượng test case t, 1 &#x3C;= t &#x3C;= 15. Mỗi test case bao gồm 81 số từ 0 đến 9 được phân cách nhau bởi dấu cách, và 9 số trên 1 dòng. Số 0 nghĩa là số cần phải điền.</p>\n<h3><strong>Đầu ra:</strong></h3>\n<p>Nếu không tồn tại giải pháp để giải quyết bài toán thì in ra “No solution”. Ngược lại thì bạn phải in 81 số đó ra, và phân cách nhau giống như đầu vào. </p>\n<p><em>Các bạn có thể tham khảo đề bài tiếng anh và submit code tại: <a href="http://www.spoj.com/problems/EASUDOKU/">http://www.spoj.com/problems/EASUDOKU/</a></em></p>\n<h3><strong>Phân tích:</strong></h3>\n<ul>\n<li>\n<p>Trước khi giải bài toán này, các bạn chắc đã biết về sudoku. Còn nếu các bạn chưa biết về sudoku thì sau đây mình sẽ giới thiệu qua về luật chơi, như sau: </p>\n</li>\n<li>\n<p>Có nhiều loại sudoku, ở đây là bài toán sudoku cơ bản. Kích thước là 9×9. Và được chia ra làm 9 khối nhỏ hơn có kích thước 3×3. Sudoku được giải khi tất cả các số trên ma trận đã được điền hết. </p>\n</li>\n<li>\n<p>Thoả mãn yêu cầu: Trên mỗi hàng, mỗi cột, và mỗi khối 3×3 nhỏ phải được điền các số từ 1 đến 9, mỗi số xuất hiện đúng 1 lần, tức là không số nào được lặp lại từ 2 lần trở lên; </p>\n</li>\n<li>\n<p>Qua đó, thuật toán có thể sử dụng ở đây đó là thuật toán <a href="/the-algorithms-blog/category/quay-lui-co-dieu-kien-backtracking/">quay lui có điều kiện – backtracking</a>. Nghĩa là, tại mỗi ô cần giải, ta sẽ điền thử từ 1 đến 9. Nếu ta có thể điền hết thì đó chính là giải pháp. Ngược lại thì sẽ không có giải pháp cho bài toán.</p>\n</li>\n</ul>\n<h2><strong>Lời giải:</strong></h2>\n<p>(Các bạn nên tự mình nghĩ ra thuật toán của bài toán trước khi tham khảo code của tôi nhé. Hãy phát huy tối đa khả năng sáng tạo của bản thân. Hơn nữa code tôi viết ra cũng chưa thật sự tối ưu. Nên rất mong nhận được sự chia sẻ của các bạn.)</p>\n<h3><strong>Code C/C++:</strong></h3>\n<p><div id="gist91916530" class="gist">\n    <div class="gist-file">\n      <div class="gist-data">\n        <div class="js-gist-file-update-container js-task-list-container file-box">\n  <div id="file-easudoku-cpp" class="file">\n    \n\n  <div itemprop="text" class="blob-wrapper data type-c">\n      <table class="highlight tab-size js-file-line-container" data-tab-size="8">\n      <tr>\n        <td id="file-easudoku-cpp-L1" class="blob-num js-line-number" data-line-number="1"></td>\n        <td id="file-easudoku-cpp-LC1" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span><span class="pl-s"><span class="pl-pds">&lt;</span>iostream<span class="pl-pds">&gt;</span></span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L2" class="blob-num js-line-number" data-line-number="2"></td>\n        <td id="file-easudoku-cpp-LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-k">using</span> <span class="pl-k">namespace</span> <span class="pl-en">std</span><span class="pl-k">;</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L3" class="blob-num js-line-number" data-line-number="3"></td>\n        <td id="file-easudoku-cpp-LC3" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L4" class="blob-num js-line-number" data-line-number="4"></td>\n        <td id="file-easudoku-cpp-LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> Matrix[<span class="pl-c1">9</span>][<span class="pl-c1">9</span>];               <span class="pl-c"><span class="pl-c">//</span> Lưu ma trận suduku</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L5" class="blob-num js-line-number" data-line-number="5"></td>\n        <td id="file-easudoku-cpp-LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-k">bool</span> Answer;                    <span class="pl-c"><span class="pl-c">//</span> Kết quả bài toán, Answer = true =&gt; có giải pháp, Answer = false nghĩa là không có</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L6" class="blob-num js-line-number" data-line-number="6"></td>\n        <td id="file-easudoku-cpp-LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">bool</span> Row[<span class="pl-c1">9</span>][<span class="pl-c1">10</span>], Col[<span class="pl-c1">9</span>][<span class="pl-c1">10</span>];    <span class="pl-c"><span class="pl-c">//</span> Lưu trạng thái tại từng hàng, cột từ 0 đến 9, các số từ 1 đến 9 đã có chưa</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L7" class="blob-num js-line-number" data-line-number="7"></td>\n        <td id="file-easudoku-cpp-LC7" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L8" class="blob-num js-line-number" data-line-number="8"></td>\n        <td id="file-easudoku-cpp-LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">Next</span>(<span class="pl-k">int</span> &amp;row, <span class="pl-k">int</span> &amp;col)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L9" class="blob-num js-line-number" data-line-number="9"></td>\n        <td id="file-easudoku-cpp-LC9" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L10" class="blob-num js-line-number" data-line-number="10"></td>\n        <td id="file-easudoku-cpp-LC10" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(col &lt; <span class="pl-c1">8</span>) col++;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L11" class="blob-num js-line-number" data-line-number="11"></td>\n        <td id="file-easudoku-cpp-LC11" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L12" class="blob-num js-line-number" data-line-number="12"></td>\n        <td id="file-easudoku-cpp-LC12" class="blob-code blob-code-inner js-file-line">    {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L13" class="blob-num js-line-number" data-line-number="13"></td>\n        <td id="file-easudoku-cpp-LC13" class="blob-code blob-code-inner js-file-line">        col = <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L14" class="blob-num js-line-number" data-line-number="14"></td>\n        <td id="file-easudoku-cpp-LC14" class="blob-code blob-code-inner js-file-line">        row++;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L15" class="blob-num js-line-number" data-line-number="15"></td>\n        <td id="file-easudoku-cpp-LC15" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L16" class="blob-num js-line-number" data-line-number="16"></td>\n        <td id="file-easudoku-cpp-LC16" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L17" class="blob-num js-line-number" data-line-number="17"></td>\n        <td id="file-easudoku-cpp-LC17" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L18" class="blob-num js-line-number" data-line-number="18"></td>\n        <td id="file-easudoku-cpp-LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-k">bool</span> <span class="pl-en">IsValid</span>(<span class="pl-k">int</span> row, <span class="pl-k">int</span> col, <span class="pl-k">int</span> value)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L19" class="blob-num js-line-number" data-line-number="19"></td>\n        <td id="file-easudoku-cpp-LC19" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L20" class="blob-num js-line-number" data-line-number="20"></td>\n        <td id="file-easudoku-cpp-LC20" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Kiểm tra xem tại cột đang xét, giá trị &#39;value&#39; này đã có chưa</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L21" class="blob-num js-line-number" data-line-number="21"></td>\n        <td id="file-easudoku-cpp-LC21" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(Col[col][value] == <span class="pl-c1">true</span>) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L22" class="blob-num js-line-number" data-line-number="22"></td>\n        <td id="file-easudoku-cpp-LC22" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L23" class="blob-num js-line-number" data-line-number="23"></td>\n        <td id="file-easudoku-cpp-LC23" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Kiểm tra xem tại hàng đang xét, giá trị &#39;value&#39; này đã có chưa</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L24" class="blob-num js-line-number" data-line-number="24"></td>\n        <td id="file-easudoku-cpp-LC24" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(Row[row][value] == <span class="pl-c1">true</span>) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L25" class="blob-num js-line-number" data-line-number="25"></td>\n        <td id="file-easudoku-cpp-LC25" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L26" class="blob-num js-line-number" data-line-number="26"></td>\n        <td id="file-easudoku-cpp-LC26" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Kiểm tra xem trong khối nhỏ 3x3 đã có giá trị &#39;value&#39; hay chưa</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L27" class="blob-num js-line-number" data-line-number="27"></td>\n        <td id="file-easudoku-cpp-LC27" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> sr = row - row % <span class="pl-c1">3</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L28" class="blob-num js-line-number" data-line-number="28"></td>\n        <td id="file-easudoku-cpp-LC28" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> sc = col - col % <span class="pl-c1">3</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L29" class="blob-num js-line-number" data-line-number="29"></td>\n        <td id="file-easudoku-cpp-LC29" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L30" class="blob-num js-line-number" data-line-number="30"></td>\n        <td id="file-easudoku-cpp-LC30" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">3</span>; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L31" class="blob-num js-line-number" data-line-number="31"></td>\n        <td id="file-easudoku-cpp-LC31" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">int</span> j = <span class="pl-c1">0</span>; j &lt; <span class="pl-c1">3</span>; j++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L32" class="blob-num js-line-number" data-line-number="32"></td>\n        <td id="file-easudoku-cpp-LC32" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span>(Matrix[i + sr][j + sc] == value) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L33" class="blob-num js-line-number" data-line-number="33"></td>\n        <td id="file-easudoku-cpp-LC33" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L34" class="blob-num js-line-number" data-line-number="34"></td>\n        <td id="file-easudoku-cpp-LC34" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L35" class="blob-num js-line-number" data-line-number="35"></td>\n        <td id="file-easudoku-cpp-LC35" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L36" class="blob-num js-line-number" data-line-number="36"></td>\n        <td id="file-easudoku-cpp-LC36" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L37" class="blob-num js-line-number" data-line-number="37"></td>\n        <td id="file-easudoku-cpp-LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">Check</span>(<span class="pl-k">int</span> row, <span class="pl-k">int</span> col)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L38" class="blob-num js-line-number" data-line-number="38"></td>\n        <td id="file-easudoku-cpp-LC38" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L39" class="blob-num js-line-number" data-line-number="39"></td>\n        <td id="file-easudoku-cpp-LC39" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Nếu đi được hết các dòng thì có nghĩa là đã có giải pháp</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L40" class="blob-num js-line-number" data-line-number="40"></td>\n        <td id="file-easudoku-cpp-LC40" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(row == <span class="pl-c1">9</span>)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L41" class="blob-num js-line-number" data-line-number="41"></td>\n        <td id="file-easudoku-cpp-LC41" class="blob-code blob-code-inner js-file-line">    {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L42" class="blob-num js-line-number" data-line-number="42"></td>\n        <td id="file-easudoku-cpp-LC42" class="blob-code blob-code-inner js-file-line">        Answer = <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L43" class="blob-num js-line-number" data-line-number="43"></td>\n        <td id="file-easudoku-cpp-LC43" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L44" class="blob-num js-line-number" data-line-number="44"></td>\n        <td id="file-easudoku-cpp-LC44" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L45" class="blob-num js-line-number" data-line-number="45"></td>\n        <td id="file-easudoku-cpp-LC45" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L46" class="blob-num js-line-number" data-line-number="46"></td>\n        <td id="file-easudoku-cpp-LC46" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Nếu tại ô đó đã có giá trị khác 0 thì ta sẽ kiểm tra đến ô tiếp theo</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L47" class="blob-num js-line-number" data-line-number="47"></td>\n        <td id="file-easudoku-cpp-LC47" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (Matrix[row][col] != <span class="pl-c1">0</span>) </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L48" class="blob-num js-line-number" data-line-number="48"></td>\n        <td id="file-easudoku-cpp-LC48" class="blob-code blob-code-inner js-file-line">    {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L49" class="blob-num js-line-number" data-line-number="49"></td>\n        <td id="file-easudoku-cpp-LC49" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Next</span>(row, col);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L50" class="blob-num js-line-number" data-line-number="50"></td>\n        <td id="file-easudoku-cpp-LC50" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Check</span>(row, col);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L51" class="blob-num js-line-number" data-line-number="51"></td>\n        <td id="file-easudoku-cpp-LC51" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L52" class="blob-num js-line-number" data-line-number="52"></td>\n        <td id="file-easudoku-cpp-LC52" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">//</span> Nếu ô đó = 0 thì bắt đầu điền thử giá trị từ 1 đến 9</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L53" class="blob-num js-line-number" data-line-number="53"></td>\n        <td id="file-easudoku-cpp-LC53" class="blob-code blob-code-inner js-file-line">    {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L54" class="blob-num js-line-number" data-line-number="54"></td>\n        <td id="file-easudoku-cpp-LC54" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">int</span> old_row, old_col;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L55" class="blob-num js-line-number" data-line-number="55"></td>\n        <td id="file-easudoku-cpp-LC55" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L56" class="blob-num js-line-number" data-line-number="56"></td>\n        <td id="file-easudoku-cpp-LC56" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">1</span>; i &lt;= <span class="pl-c1">9</span>; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L57" class="blob-num js-line-number" data-line-number="57"></td>\n        <td id="file-easudoku-cpp-LC57" class="blob-code blob-code-inner js-file-line">        {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L58" class="blob-num js-line-number" data-line-number="58"></td>\n        <td id="file-easudoku-cpp-LC58" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Kiểm tra xem nếu ô tại hàng row, và cột col, điền giá trị i có hợp lệ không</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L59" class="blob-num js-line-number" data-line-number="59"></td>\n        <td id="file-easudoku-cpp-LC59" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Nếu hợp lệ thì điền thử</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L60" class="blob-num js-line-number" data-line-number="60"></td>\n        <td id="file-easudoku-cpp-LC60" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span>(<span class="pl-c1">IsValid</span>(row, col, i))</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L61" class="blob-num js-line-number" data-line-number="61"></td>\n        <td id="file-easudoku-cpp-LC61" class="blob-code blob-code-inner js-file-line">            {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L62" class="blob-num js-line-number" data-line-number="62"></td>\n        <td id="file-easudoku-cpp-LC62" class="blob-code blob-code-inner js-file-line">                old_row = row;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L63" class="blob-num js-line-number" data-line-number="63"></td>\n        <td id="file-easudoku-cpp-LC63" class="blob-code blob-code-inner js-file-line">                old_col = col;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L64" class="blob-num js-line-number" data-line-number="64"></td>\n        <td id="file-easudoku-cpp-LC64" class="blob-code blob-code-inner js-file-line">        </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L65" class="blob-num js-line-number" data-line-number="65"></td>\n        <td id="file-easudoku-cpp-LC65" class="blob-code blob-code-inner js-file-line">                Matrix[row][col] = i;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L66" class="blob-num js-line-number" data-line-number="66"></td>\n        <td id="file-easudoku-cpp-LC66" class="blob-code blob-code-inner js-file-line">                Row[row][i] = <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L67" class="blob-num js-line-number" data-line-number="67"></td>\n        <td id="file-easudoku-cpp-LC67" class="blob-code blob-code-inner js-file-line">                Col[col][i] = <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L68" class="blob-num js-line-number" data-line-number="68"></td>\n        <td id="file-easudoku-cpp-LC68" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">Next</span>(row,col);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L69" class="blob-num js-line-number" data-line-number="69"></td>\n        <td id="file-easudoku-cpp-LC69" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L70" class="blob-num js-line-number" data-line-number="70"></td>\n        <td id="file-easudoku-cpp-LC70" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">Check</span>(row,col);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L71" class="blob-num js-line-number" data-line-number="71"></td>\n        <td id="file-easudoku-cpp-LC71" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L72" class="blob-num js-line-number" data-line-number="72"></td>\n        <td id="file-easudoku-cpp-LC72" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span>(Answer) <span class="pl-k">return</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L73" class="blob-num js-line-number" data-line-number="73"></td>\n        <td id="file-easudoku-cpp-LC73" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L74" class="blob-num js-line-number" data-line-number="74"></td>\n        <td id="file-easudoku-cpp-LC74" class="blob-code blob-code-inner js-file-line">                row = old_row;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L75" class="blob-num js-line-number" data-line-number="75"></td>\n        <td id="file-easudoku-cpp-LC75" class="blob-code blob-code-inner js-file-line">                col = old_col;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L76" class="blob-num js-line-number" data-line-number="76"></td>\n        <td id="file-easudoku-cpp-LC76" class="blob-code blob-code-inner js-file-line">                Row[row][i] = <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L77" class="blob-num js-line-number" data-line-number="77"></td>\n        <td id="file-easudoku-cpp-LC77" class="blob-code blob-code-inner js-file-line">                Col[col][i] = <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L78" class="blob-num js-line-number" data-line-number="78"></td>\n        <td id="file-easudoku-cpp-LC78" class="blob-code blob-code-inner js-file-line">                Matrix[row][col] = <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L79" class="blob-num js-line-number" data-line-number="79"></td>\n        <td id="file-easudoku-cpp-LC79" class="blob-code blob-code-inner js-file-line">            }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L80" class="blob-num js-line-number" data-line-number="80"></td>\n        <td id="file-easudoku-cpp-LC80" class="blob-code blob-code-inner js-file-line">        }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L81" class="blob-num js-line-number" data-line-number="81"></td>\n        <td id="file-easudoku-cpp-LC81" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L82" class="blob-num js-line-number" data-line-number="82"></td>\n        <td id="file-easudoku-cpp-LC82" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L83" class="blob-num js-line-number" data-line-number="83"></td>\n        <td id="file-easudoku-cpp-LC83" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L84" class="blob-num js-line-number" data-line-number="84"></td>\n        <td id="file-easudoku-cpp-LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-k">int</span> <span class="pl-en">main</span>()</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L85" class="blob-num js-line-number" data-line-number="85"></td>\n        <td id="file-easudoku-cpp-LC85" class="blob-code blob-code-inner js-file-line">{</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L86" class="blob-num js-line-number" data-line-number="86"></td>\n        <td id="file-easudoku-cpp-LC86" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ios::sync_with_stdio</span>(<span class="pl-c1">false</span>);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L87" class="blob-num js-line-number" data-line-number="87"></td>\n        <td id="file-easudoku-cpp-LC87" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L88" class="blob-num js-line-number" data-line-number="88"></td>\n        <td id="file-easudoku-cpp-LC88" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Comment dòng này trước khi submit</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L89" class="blob-num js-line-number" data-line-number="89"></td>\n        <td id="file-easudoku-cpp-LC89" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">freopen</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>input.txt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,stdin);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L90" class="blob-num js-line-number" data-line-number="90"></td>\n        <td id="file-easudoku-cpp-LC90" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L91" class="blob-num js-line-number" data-line-number="91"></td>\n        <td id="file-easudoku-cpp-LC91" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> T;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L92" class="blob-num js-line-number" data-line-number="92"></td>\n        <td id="file-easudoku-cpp-LC92" class="blob-code blob-code-inner js-file-line">    cin &gt;&gt; T;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L93" class="blob-num js-line-number" data-line-number="93"></td>\n        <td id="file-easudoku-cpp-LC93" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L94" class="blob-num js-line-number" data-line-number="94"></td>\n        <td id="file-easudoku-cpp-LC94" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(<span class="pl-k">int</span> tc = <span class="pl-c1">0</span>; tc &lt; T; tc++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L95" class="blob-num js-line-number" data-line-number="95"></td>\n        <td id="file-easudoku-cpp-LC95" class="blob-code blob-code-inner js-file-line">    {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L96" class="blob-num js-line-number" data-line-number="96"></td>\n        <td id="file-easudoku-cpp-LC96" class="blob-code blob-code-inner js-file-line">        Answer = <span class="pl-c1">false</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L97" class="blob-num js-line-number" data-line-number="97"></td>\n        <td id="file-easudoku-cpp-LC97" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">9</span>; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L98" class="blob-num js-line-number" data-line-number="98"></td>\n        <td id="file-easudoku-cpp-LC98" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span>(<span class="pl-k">int</span> j = <span class="pl-c1">1</span>; j &lt;= <span class="pl-c1">9</span>; j++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L99" class="blob-num js-line-number" data-line-number="99"></td>\n        <td id="file-easudoku-cpp-LC99" class="blob-code blob-code-inner js-file-line">                Row[i][j] = Col[i][j] = <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L100" class="blob-num js-line-number" data-line-number="100"></td>\n        <td id="file-easudoku-cpp-LC100" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L101" class="blob-num js-line-number" data-line-number="101"></td>\n        <td id="file-easudoku-cpp-LC101" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Nhập vào ma trận</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L102" class="blob-num js-line-number" data-line-number="102"></td>\n        <td id="file-easudoku-cpp-LC102" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> đồng thời kiểm lưu trạng thái các số đã có hay chưa tại từng hàng, cột</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L103" class="blob-num js-line-number" data-line-number="103"></td>\n        <td id="file-easudoku-cpp-LC103" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">9</span>; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L104" class="blob-num js-line-number" data-line-number="104"></td>\n        <td id="file-easudoku-cpp-LC104" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span>(<span class="pl-k">int</span> j = <span class="pl-c1">0</span>; j &lt; <span class="pl-c1">9</span>; j++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L105" class="blob-num js-line-number" data-line-number="105"></td>\n        <td id="file-easudoku-cpp-LC105" class="blob-code blob-code-inner js-file-line">            {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L106" class="blob-num js-line-number" data-line-number="106"></td>\n        <td id="file-easudoku-cpp-LC106" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">int</span> tmp;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L107" class="blob-num js-line-number" data-line-number="107"></td>\n        <td id="file-easudoku-cpp-LC107" class="blob-code blob-code-inner js-file-line">                cin &gt;&gt; tmp;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L108" class="blob-num js-line-number" data-line-number="108"></td>\n        <td id="file-easudoku-cpp-LC108" class="blob-code blob-code-inner js-file-line">                Matrix[i][j] = tmp;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L109" class="blob-num js-line-number" data-line-number="109"></td>\n        <td id="file-easudoku-cpp-LC109" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L110" class="blob-num js-line-number" data-line-number="110"></td>\n        <td id="file-easudoku-cpp-LC110" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Tại dòng i, số có giá trị tmp đã xuất hiện</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L111" class="blob-num js-line-number" data-line-number="111"></td>\n        <td id="file-easudoku-cpp-LC111" class="blob-code blob-code-inner js-file-line">                Row[i][tmp] = <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L112" class="blob-num js-line-number" data-line-number="112"></td>\n        <td id="file-easudoku-cpp-LC112" class="blob-code blob-code-inner js-file-line">                <span class="pl-c"><span class="pl-c">//</span> Tại cột j, số có giá tị tmp đã xuất hiện</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L113" class="blob-num js-line-number" data-line-number="113"></td>\n        <td id="file-easudoku-cpp-LC113" class="blob-code blob-code-inner js-file-line">                Col[j][tmp] = <span class="pl-c1">true</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L114" class="blob-num js-line-number" data-line-number="114"></td>\n        <td id="file-easudoku-cpp-LC114" class="blob-code blob-code-inner js-file-line">            }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L115" class="blob-num js-line-number" data-line-number="115"></td>\n        <td id="file-easudoku-cpp-LC115" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L116" class="blob-num js-line-number" data-line-number="116"></td>\n        <td id="file-easudoku-cpp-LC116" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Bắt đầu xét từ ô đầu tiên hàng = 0 và cột = 0</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L117" class="blob-num js-line-number" data-line-number="117"></td>\n        <td id="file-easudoku-cpp-LC117" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">Check</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L118" class="blob-num js-line-number" data-line-number="118"></td>\n        <td id="file-easudoku-cpp-LC118" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L119" class="blob-num js-line-number" data-line-number="119"></td>\n        <td id="file-easudoku-cpp-LC119" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> In kết quả</span></td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L120" class="blob-num js-line-number" data-line-number="120"></td>\n        <td id="file-easudoku-cpp-LC120" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>(Answer)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L121" class="blob-num js-line-number" data-line-number="121"></td>\n        <td id="file-easudoku-cpp-LC121" class="blob-code blob-code-inner js-file-line">        {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L122" class="blob-num js-line-number" data-line-number="122"></td>\n        <td id="file-easudoku-cpp-LC122" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span>(<span class="pl-k">int</span> i = <span class="pl-c1">0</span>; i &lt; <span class="pl-c1">9</span>; i++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L123" class="blob-num js-line-number" data-line-number="123"></td>\n        <td id="file-easudoku-cpp-LC123" class="blob-code blob-code-inner js-file-line">            {</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L124" class="blob-num js-line-number" data-line-number="124"></td>\n        <td id="file-easudoku-cpp-LC124" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span>(<span class="pl-k">int</span> j = <span class="pl-c1">0</span>; j &lt; <span class="pl-c1">9</span>; j++)</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L125" class="blob-num js-line-number" data-line-number="125"></td>\n        <td id="file-easudoku-cpp-LC125" class="blob-code blob-code-inner js-file-line">                    cout &lt;&lt; Matrix[i][j] &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L126" class="blob-num js-line-number" data-line-number="126"></td>\n        <td id="file-easudoku-cpp-LC126" class="blob-code blob-code-inner js-file-line">                cout &lt;&lt; endl;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L127" class="blob-num js-line-number" data-line-number="127"></td>\n        <td id="file-easudoku-cpp-LC127" class="blob-code blob-code-inner js-file-line">            }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L128" class="blob-num js-line-number" data-line-number="128"></td>\n        <td id="file-easudoku-cpp-LC128" class="blob-code blob-code-inner js-file-line">        }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L129" class="blob-num js-line-number" data-line-number="129"></td>\n        <td id="file-easudoku-cpp-LC129" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> cout &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>No solution<span class="pl-pds">&quot;</span></span> &lt;&lt; endl;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L130" class="blob-num js-line-number" data-line-number="130"></td>\n        <td id="file-easudoku-cpp-LC130" class="blob-code blob-code-inner js-file-line">        </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L131" class="blob-num js-line-number" data-line-number="131"></td>\n        <td id="file-easudoku-cpp-LC131" class="blob-code blob-code-inner js-file-line">    }</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L132" class="blob-num js-line-number" data-line-number="132"></td>\n        <td id="file-easudoku-cpp-LC132" class="blob-code blob-code-inner js-file-line"> </td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L133" class="blob-num js-line-number" data-line-number="133"></td>\n        <td id="file-easudoku-cpp-LC133" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>\n      </tr>\n      <tr>\n        <td id="file-easudoku-cpp-L134" class="blob-num js-line-number" data-line-number="134"></td>\n        <td id="file-easudoku-cpp-LC134" class="blob-code blob-code-inner js-file-line">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class="gist-meta">\n        <a href="https://gist.github.com/completejavascript/b886cc10db36a747d23e522a4df4aa2b/raw/b01f8dd87e69fbcf9919c7fe4c7e88502c7880e1/EASUDOKU.cpp" style="float:right">view raw</a>\n        <a href="https://gist.github.com/completejavascript/b886cc10db36a747d23e522a4df4aa2b#file-easudoku-cpp">EASUDOKU.cpp</a>\n        hosted with &#10084; by <a href="https://github.com">GitHub</a>\n      </div>\n    </div>\n</div>\n</p>\n<p><em>Code by Phạm Văn Lâm</em></p>',
id:"F:/Github/the-algorithms-blog/src/posts/2016-09-25---spoj-com-thuat-toan-bai-easudoku-easy-sudoku/spoj-com-thuat-toan-bai-easudoku-easy-sudoku.md absPath of file >>> MarkdownRemark",frontmatter:{title:"SPOJ.COM – Thuật toán bài EASUDOKU – Easy sudoku",date:"25/09/2016",categories:["spoj","Quay lui có điều kiện - Backtracking"],tags:["phạm văn lâm","spoj.com","thuật toán","thuật toán spoj.com","quay lui có điều kiện backtracking"]},fields:{slug:"/spoj-com-thuat-toan-bai-easudoku-easy-sudoku/"},excerpt:"Đề bài: Bạn được yêu cầu tìm thuật toán để giải quyết bài toán sudoku cơ bản. Đầu vào: Dòng đầu vào bao gồm số lượng test case t, 1 <= t…",timeToRead:7},prevPost:{frontmatter:{title:"SPOJ.COM – Thuật toán bài BOOKS1 – Copying Books"},fields:{slug:"/spoj-com-thuat-toan-bai-books1-copying-books/"}},nextPost:{frontmatter:{title:"SPOJ.COM – Thuật toán bài BOKAM143SOU – Checking cubes"},fields:{slug:"/spoj-com-thuat-toan-bai-bokam143sou-checking-cubes/"}},site:{siteMetadata:{title:"Algorithms Blog",siteUrl:"http://thuattoan.phamvanlam.com",twitterHandle:"@CmpltJavaScript",fbCommentId:"728566430818562"}}},pathContext:{slug:"/spoj-com-thuat-toan-bai-easudoku-easy-sudoku/",prevSlug:"/spoj-com-thuat-toan-bai-books1-copying-books/",nextSlug:"/spoj-com-thuat-toan-bai-bokam143sou-checking-cubes/"}}}});
//# sourceMappingURL=path---spoj-com-thuat-toan-bai-easudoku-easy-sudoku-1c298b5e1dc35c078d2c.js.map